make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 

# Make data base, printed on Fri Nov 10 15:13:34 2023

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
VSCODE_CRASH_REPORTER_PROCESS_TYPE = extensionHost
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/elonarey-costa/Documents/Documents/phdCode/NEMO
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","osLocale":"en-au","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# environment
CONDA_PREFIX_1 = /opt/anaconda3
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
 
# environment
VSCODE_CWD = /
# environment
PATH = /opt/anaconda3/envs/myenv/bin:/opt/anaconda3/condabin:/opt/homebrew/bin:/opt/homebrew/sbin:/Library/Frameworks/Python.framework/Versions/3.9/bin:/Library/Frameworks/Python.framework/Versions/3.10/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.N1CJzcI2ne/Listeners
# automatic
%F = $(notdir $%)
# environment
DISPLAY = /private/tmp/com.apple.launchd.bG9suCptbQ/org.xquartz:0
# environment
CONDA_EXE = /opt/anaconda3/bin/conda
# environment
PWD = /Users/elonarey-costa/Documents/Documents/phdCode/NEMO
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/share/man:/Library/Developer/CommandLineTools/usr/share/man:/Library/Developer/CommandLineTools/Toolchains/XcodeDefault.xctoolchain/usr/share/man:/opt/homebrew/share/man::
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/elonarey-costa
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/elonarey-costa/Library/Application Support/Code/CachedData/1a5daa3a0231a0fbba4f14db7ec463cf99d7768e
# environment
LOGNAME = elonarey-costa
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
CONDA_PROMPT_MODIFIER = (myenv) 
# environment
PYTHONBREAKPOINT = ipdb.set_trace
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
CONDA_DEFAULT_ENV = myenv
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = elonarey-costa
# makefile
.DEFAULT_GOAL := all
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 4)
VENV = myenv
# environment
PROJ_LIB = /opt/anaconda3/envs/myenv/share/proj
# environment
CONDA_SHLVL = 2
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/44/sn4jg2w52xx7467m5hq6zsb40000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/elonarey-costa/Library/Application Support/Code/1.84-main.sock
# environment
MallocNanoZone = 0
# environment
PROJ_NETWORK = ON
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.39532748.39532754
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0:15
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# environment
CONDA_PYTHON_EXE = /opt/anaconda3/bin/python
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 76)
LINTSRC = evolve replay summary $(wildcard *.py awklite/*.py nemo/*.py tests/*.py)
# makefile (from `Makefile', line 13)
COVRUN = coverage run -a --source=. --omit=setup.py
# environment
MAKELEVEL := 0
# environment
CONDA_PREFIX = /opt/anaconda3/envs/myenv
# environment
VSCODE_PID = 36933
# environment
LANG = C
# variable set hash-table stats:
# Load=77/1024=8%, Rehash=0, Collisions=2/106=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777233, inode 10780725): 52 files, no impossibilities.

# 52 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

lineprof: stub.py
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 74):
	kernprof -v -l stub.py
	

stub.py:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 63):
	printf 'import nemo\n' > $@
	printf 'c = nemo.Context()\n' >> $@
	printf 'nemo.run(c)\n' >> $@
	

envset:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 16):
	test -n "$$VIRTUAL_ENV" || (echo "Python env is not activated" && false)
	

all: venv
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/4=0%

.PHONY: html
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

coveralls:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 96):
	coveralls
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2023-11-10 14:44:02
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

replay.json:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 51):
	printf "# %s\n%s\n\n" "comment line" "malformed line" >> $@
	printf '{"options": {"carbon_price": 0, "ccs_storage_costs": 27, "gas_price": 11,' >> $@
	printf ' "coal_price": 2, "costs": "Null", "discount_rate": 0.05, "supply_scenario": "__one_ccgt__",' >> $@
	printf ' "nsp_limit": 0.75, "parameters": [1]}\n' >> $@
	

test: envset
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 21):
	PYTHONPATH=. pytest --mpl --cov=nemo --doctest-modules
	

ruff: envset
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 82):
	ruff check $(LINTSRC)
	

lint: envset flake8 ruff pylint
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 88):
	codespell -d -L fom,hsa,trough $(LINTSRC) || true
	isort --check $(LINTSRC)
	pylama $(LINTSRC)
	-vulture --min-confidence=70 $(LINTSRC)
	bandit -qq -s B101 $(LINTSRC)
	pydocstyle $(LINTSRC)
	

prof: nemo.prof
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 71):
	snakeviz $<
	

# Not a target:
requirements.txt:
#  Implicit rule search has been done.
#  Last modified 2023-11-10 14:44:02
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

dist:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 99):
	python3 setup.py sdist bdist_wheel
	

venv: myenv/bin/activate
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/4=0%

clean:
#  Implicit rule search has not been done.
 
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 108):
	-rm -r dist build *.egg-info
	-rm -r .coverage htmlcov
	-rm replay.json replay-noscenario.json replay-nocost.json
	-rm *.pyc tests/*.pyc nemo.prof stub.py stub.py.lprof
	

coverage: replay.json replay-noscenario.json replay-nocost.json
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 24):
	$(COVRUN) evolve --list-scenarios > /dev/null
	#  these tests are needed because we need to control external
	#  environment variables
	NEMORC=nemo.cfg $(COVRUN) evolve -g1 -s __one_ccgt__ > /dev/null
	unset NEMORC && $(COVRUN) evolve -g1 -s __one_ccgt__ > /dev/null
	unset DISPLAY && $(COVRUN) evolve -g1 -s __one_ccgt__ > /dev/null
	if test -f trace.out; then rm trace.out; fi
	$(COVRUN) evolve -v --lambda 2 -g1 -s __one_ccgt__ \
	--trace-file=trace.out --emissions-limit=0 \
	--fossil-limit=0.1 --reserves=1000 \
	--reliability-std=0.002 --min-regional-generation=0.5 > /dev/null
	test -f trace.out && rm trace.out
	$(COVRUN) replay -f replay.json -v -v > /dev/null
	$(COVRUN) replay -f replay-noscenario.json -v > /dev/null || true
	$(COVRUN) replay -f replay-nocost.json -v > /dev/null || true
	$(COVRUN) evolve -g1 -s __one_ccgt__ -p > /dev/null
	$(COVRUN) replay -p -f replay.json > /dev/null
	rm results.json
	rm replay.json replay-noscenario.json replay-nocost.json
	make html
	

pdoc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 105):
	pdoc3 --force --html nemo
	

html:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 48):
	coverage html
	

replay-noscenario.json: replay.json
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 57):
	sed 's/__one_ccgt__/noexist/' < $< > $@
	

myenv/bin/activate: requirements.txt
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  Last modified 2023-03-15 15:52:25
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := myenv/bin/activate
# automatic
# % := 
# automatic
# * := 
# automatic
# + := requirements.txt
# automatic
# | := 
# automatic
# < := requirements.txt
# automatic
# ^ := requirements.txt
# automatic
# ? := requirements.txt
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/12=8%
#  commands to execute (from `Makefile', line 7):
	python3 -m venv $(VENV)
	./$(VENV)/bin/pip install -r requirements.txt
	

pylint:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 85):
	pylint --enable=useless-suppression $(LINTSRC)
	

replay-nocost.json: replay.json
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 60):
	sed 's/Null/noexist/' < $< > $@
	

flake8: envset
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 79):
	flake8 $(LINTSRC) --ignore=N801
	

check: envset flake8 ruff test
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

upload: dist
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 102):
	twine upload dist/*
	

nemo.prof: stub.py
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 68):
	python3 -m cProfile -o $@ $<
	

# files hash-table stats:
# Load=29/1024=3%, Rehash=0, Collisions=3/67=4%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Fri Nov 10 15:13:34 2023

 
